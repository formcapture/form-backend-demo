services:
  form-backend:
    image: ""
    build:
      context: ${FORMCAPTURE_BASE_DIR}/backend
      dockerfile: Dockerfile.dev
    ports:
      - "9229:9229"
    volumes:
      - ${FORMCAPTURE_BASE_DIR}/backend/:/form-backend
      - ${PWD}/form-backend/uploads:/form-backend/uploads
      - ${PWD}/form-backend/form_configs:/form-backend/form_configs
    extra_hosts:
      - "auth.form-backend.local:${HOST_IP}"
      - "app.form-backend.local:${HOST_IP}"
    environment:
      KC_AUTH_SERVER_URL: https://auth.${HOSTNAME}/auth
      NODE_TLS_REJECT_UNAUTHORIZED: 0
  mkcert:
    container_name: ${COMPOSE_PROJECT_NAME}-mkcert
    image: vishnunair/docker-mkcert
    environment:
      domain: ${HOSTNAME}
    volumes:
      - ${PWD}/nginx/certs/:/root/.local/share/mkcert/
    command: /bin/sh -c 'mkcert -install "*.form-backend.local" && for i in $$(echo $$domain | sed "s/,/ /g"); do [ ! -f /root/.local/share/mkcert/$$i.pem ] && mkcert $$i; done && tail -f -n0 /etc/hosts'
    healthcheck:
      test: ["CMD", "test", "-f", "/root/.local/share/mkcert/${HOSTNAME}.pem"]
      interval: 5s
      start_period: 2s
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    depends_on:
      - mkcert
      - keycloak
    environment:
      FORMCAPTURE_HOST: ${HOSTNAME}
    image: nginx:1.28-alpine-slim
    networks:
      - app-network
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ${PWD}/nginx/proxy_params:/etc/nginx/proxy_params
      - ${PWD}/nginx/certs/:/etc/nginx/certs/:ro
      - ${PWD}/nginx/gzip.conf:/etc/nginx/gzip.conf
      - ${PWD}/nginx/ssl.conf:/etc/nginx/ssl.conf
      - ${PWD}/nginx/dev.conf:/etc/nginx/templates/default.conf.template
  keycloak-db:
    ports:
      - "5555:5432"
  db:
    ports:
      - "6666:5432"
  keycloak:
    volumes:
      - ${PWD}/keycloak/init_data/:/opt/keycloak/data/import/:ro
    environment:
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HOSTNAME: auth.${HOSTNAME}
      KC_CHECK_LOGIN_IFRAME: "false"
      KC_PROXY_HEADERS: "xforwarded"
  postgrest:
    environment:
      PGRST_LOG_LEVEL: "debug"
